 /_ esto es un comentario inicial _/

float function func1(char x22,char x22){@semantico borrar parametro
	local char x22 <= "!"| /_semantico x22_/
	local char miChar<="!"|
        @ Restringir el largo en semantico, para que char largo = 1
	local char miChar2<="!!"| @sintactico
	local string str1<="Hola $%&/#$&) mundo"|
	local float fl1|
	local float fl1<=56.6| @semantico fl1
	local int in1<= false|
	local char arr[2] <= {"c","d"}| @sintatico lit
	@arr[2] <= "c"|
	local boolean mibool <= true|

	local int in1 <= --fl1 ~ -14/++in1+7- 15 **  arr in1 * func1 (hola, true, "hola mundo", 4.5, "a") | @semantico fl1, in1
	mibool <= (3.7 * fl1 + (-45.6~76)) < 56 ^ true # mibool # !mibool  | @semantico literal 76

	return -5.6|@cambio en retorno genera semantico

int function main() {
    local int a <=2|
    local int b|
    local int c <= 5|
    local boolean x <= true|
    local int ac <= a + x|
    return a|
}

float function miFunc(int x, float z){	
	for(i <= 10| i<30*2| ++i|)
	{
		do{
			var <= var - 1| @semantico
			return var|@sintactico
		}until(var2>12.2 # (34+33)>12)| @semantico

		if (var==0)
		{
			print("entra al if")|
			break|
		}
		elif(true)
		{
			print(var)|
		}
		else
		{
			for(j <= 10| j<30*2| ++j|){
				for(k <= 10| k<30*2| ++k|){
                                        local int navidad|
					return 1+3|
				}|
			}|
		}|
		if (var==0){
			break|
		} elif(true) {
			print(var)|
		}|
	}|
	return 1| @semantico
}

string function func3(string b1){ @semantico string
	return b1| 
}

int function main(){ @function
/_
Comentario 1
_/
	
@comentario 2
	local boolean b1|
	local string s1|
	read(s1)| @semantico
	print(b1)| @semantico
	print(true)| @semantico
	print(-6.7)|
	miFunc(miFunc(),"a")| @semantico miFunc, hola
	local boolean bl0 <= 6.7 != 8.9| @ok
	local boolean bl1 <= in1 => fl1 ^ false # !(func2(3,in1) > 56)| @semantico in1 >= fl1, func2
	return bl1| @semantico
}


